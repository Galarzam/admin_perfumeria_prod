{"version":3,"sources":["./src/app/modules/auth/_models/auth.model.ts","./src/app/modules/auth/registration/confirm-password.validator.ts","./src/app/modules/auth/_models/user.model.ts","./src/app/modules/i18n/translation.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAO,MAAM,SAAS;IAKpB,OAAO,CAAC,IAAS;QACf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACpC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAClC,CAAC;CACF;;;;;;;;;;;;;ACRD;AAAA;AAAO,MAAM,wBAAwB;IACnC;;;OAGG;IACH,MAAM,CAAC,aAAa,CAAC,OAAwB;QAC3C,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAE/C,MAAM,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QAEvD,IAAI,QAAQ,KAAK,eAAe,EAAE;YAChC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;SAC/D;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;CACF;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAyC;AAIlC,MAAM,SAAU,SAAQ,qDAAS;IA8CtC,OAAO,CAAC,IAAS;QACf,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QAC9B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,kCAAkC,CAAC;QAC1D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC;QACxC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC;QAC1C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;IAC5C,CAAC;CACF;;;;;;;;;;;;;AChED;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACO;;AAM/C,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAHnB,CAAC,4DAAY,EAAE,mEAAe,CAAC,EAC9B,4DAAY,EAAE,mEAAe;mIAE5B,iBAAiB,cAHlB,4DAAY,EAAE,mEAAe,aAC7B,4DAAY,EAAE,mEAAe;6FAE5B,iBAAiB;cAJ7B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,EAAE,mEAAe,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,EAAE,mEAAe,CAAC;aACzC","file":"common-es2015.js","sourcesContent":["export class AuthModel {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  expiresIn: Date;\r\n\r\n  setAuth(auth: any) {\r\n    this.accessToken = auth.accessToken;\r\n    this.refreshToken = auth.refreshToken;\r\n    this.expiresIn = auth.expiresIn;\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport class ConfirmPasswordValidator {\r\n  /**\r\n   * Check matching password with confirm password\r\n   * @param control AbstractControl\r\n   */\r\n  static MatchPassword(control: AbstractControl) {\r\n    const password = control.get('password').value;\r\n\r\n    const confirmPassword = control.get('cPassword').value;\r\n\r\n    if (password !== confirmPassword) {\r\n      control.get('cPassword').setErrors({ ConfirmPassword: true });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { AuthModel } from './auth.model';\r\nimport { AddressModel } from './address.model';\r\nimport { SocialNetworksModel } from './social-networks.model';\r\n\r\nexport class UserModel extends AuthModel {\r\n  id: number;\r\n  username: string;\r\n  password: string;\r\n  fullname: string;\r\n  email: string;\r\n  pic: string;\r\n  roles: number[];\r\n  occupation: string;\r\n  companyName: string;\r\n  phone: string;\r\n  address?: AddressModel;\r\n  socialNetworks?: SocialNetworksModel;\r\n  // personal information\r\n  firstname: string;\r\n  lastname: string;\r\n  website: string;\r\n  // account information\r\n  language: string;\r\n  timeZone: string;\r\n  communication: {\r\n    email: boolean,\r\n    sms: boolean,\r\n    phone: boolean\r\n  };\r\n  // email settings\r\n  emailSettings: {\r\n    emailNotification: boolean,\r\n    sendCopyToPersonalEmail: boolean,\r\n    activityRelatesEmail: {\r\n      youHaveNewNotifications: boolean,\r\n      youAreSentADirectMessage: boolean,\r\n      someoneAddsYouAsAsAConnection: boolean,\r\n      uponNewOrder: boolean,\r\n      newMembershipApproval: boolean,\r\n      memberRegistration: boolean\r\n    },\r\n    updatesFromKeenthemes: {\r\n      newsAboutKeenthemesProductsAndFeatureUpdates: boolean,\r\n      tipsOnGettingMoreOutOfKeen: boolean,\r\n      thingsYouMissedSindeYouLastLoggedIntoKeen: boolean,\r\n      newsAboutMetronicOnPartnerProductsAndOtherServices: boolean,\r\n      tipsOnMetronicBusinessProducts: boolean\r\n    }\r\n  };\r\n\r\n  setUser(user: any) {\r\n    this.id = user.id;\r\n    this.username = user.username || '';\r\n    this.password = user.password || '';\r\n    this.fullname = user.fullname || '';\r\n    this.email = user.email || '';\r\n    this.pic = user.pic || './assets/media/users/default.jpg';\r\n    this.roles = user.roles || [];\r\n    this.occupation = user.occupation || '';\r\n    this.companyName = user.companyName || '';\r\n    this.phone = user.phone || '';\r\n    this.address = user.address;\r\n    this.socialNetworks = user.socialNetworks;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, TranslateModule],\r\n  exports: [CommonModule, TranslateModule],\r\n})\r\nexport class TranslationModule {}\r\n"],"sourceRoot":"webpack:///"}