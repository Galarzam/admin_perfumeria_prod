{"version":3,"sources":["webpack:///src/app/modules/users/components/edit-colaborador/edit-colaborador.component.ts","webpack:///src/app/modules/users/components/edit-colaborador/edit-colaborador.component.html","webpack:///src/app/modules/users/components/delete-user/delete-user.component.ts","webpack:///src/app/modules/users/components/delete-user/delete-user.component.html","webpack:///src/app/modules/users/users.component.ts","webpack:///src/app/modules/users/users.component.html","webpack:///src/app/modules/users/users.module.ts","webpack:///src/app/modules/users/components/edit-users/edit-users.component.ts","webpack:///src/app/modules/users/components/edit-users/edit-users.component.html","webpack:///src/app/modules/users/components/change-state-user/change-state-user.component.ts","webpack:///src/app/modules/users/components/change-state-user/change-state-user.component.html","webpack:///src/app/modules/users/_services/users.service.ts","webpack:///src/app/modules/users/components/add-users/add-users.component.ts","webpack:///src/app/modules/users/components/add-users/add-users.component.html","webpack:///src/app/modules/users/users-routing.module.ts","webpack:///src/app/modules/users/users-list/users-list.component.ts","webpack:///src/app/modules/users/users-list/users-list.component.html"],"names":["EditColaboradorComponent","selector","templateUrl","styleUrls","DeleteUserComponent","_userService","modal","user_selected","usersE","isLoading","isLoading$","deleteUser","id","subscribe","resp","console","log","close","emit","UsersComponent","UsersModule","declarations","imports","EditUsersComponent","fb","toaster","loadForm","formGroup","group","name","compose","required","minLength","surname","email","maxLength","state","role_id","password","nullValidator","rpassword","value","open","text","update","message","user","controlName","control","controls","valid","dirty","touched","invalid","validation","hasError","save","ChangeStateUserComponent","UsersService","http","authservice","isLoadingSubject","asObservable","page","search","next","headers","token","LINK","URL","get","pipe","data","post","user_Id","put","providedIn","AddUsersComponent","type_user","register","routes","path","component","children","redirectTo","pathMatch","UsersRoutingModule","forChild","exports","UsersListComponent","modelService","totalPages","currentPage","users","allUsers","total","modalRef","centered","size","result","then","componentInstance","unshift","INDEX","findIndex","splice","index","addUser","reset","loadPage"],"mappings":"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","file":"modules-users-users-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-colaborador',\n  templateUrl: './edit-colaborador.component.html',\n  styleUrls: ['./edit-colaborador.component.scss']\n})\nexport class EditColaboradorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>edit-colaborador works!</p>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { UsersService } from '../../_services/users.service';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-delete-user',\n  templateUrl: './delete-user.component.html',\n  styleUrls: ['./delete-user.component.scss']\n})\nexport class DeleteUserComponent implements OnInit {\n\n  @Input() user_selected:any = null;\n  @Output() usersE: EventEmitter<any> = new EventEmitter();\n   \n  isLoading$;\n  isLoading = false;\n\n  constructor(\n    public _userService:UsersService,\n    public modal: NgbActiveModal,\n  ) { \n  }\n\n  ngOnInit(): void {\n    this.isLoading$ = this._userService.isLoading$\n  }\n\n  delete(){\n    this._userService.deleteUser(this.user_selected.id).subscribe((resp:any) => {\n      console.log(resp);\n      this.modal.close();\n      this.usersE.emit(this.user_selected);\n    })\n  }\n\n}\n","<ng-container *ngIf=\"isLoading\">\n    <div class=\"progress progress-modal\">\n        <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\" style=\"width: 100%;\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>>\n    </div>\n</ng-container>\n\n<div class=\"modal-content\">\n    <div class=\"modal-header\">\n        <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\n            <i class=\"icon-2x text-dark-50 fas fa-user-times mx-2\"></i>Eliminar al Usuario {{ user_selected.name }}\n        </div>\n    </div>\n\n    <div class=\"overlay overlay-block cursor-default modal-body\">\n        <ng-container *ngIf=\"isLoading$ | async\">\n            <div class=\"overlay-layer bg-transparent\">\n                <div class=\"spinner spinner-lg spinner-success\"></div>\n            </div>\n        </ng-container>\n\n    <span>¿Estas Seguro de Eliminar al Usuario:<b> {{ user_selected.name + ' ' + user_selected.surname}} </b>?</span>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-light btn-elevate mr-2\" (click)=\"modal.dismiss()\">Cancel</button>\n        <button type=\"submit\" class=\"btn btn-danger btn-elevate mr-2\" (click)=\"delete()\">Eliminar Usuario</button>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UsersRoutingModule } from './users-routing.module';\nimport { UsersComponent } from './users.component';\nimport { UsersListComponent } from './users-list/users-list.component';\nimport { AddUsersComponent } from './components/add-users/add-users.component';\nimport { EditUsersComponent } from './components/edit-users/edit-users.component';\nimport { EditColaboradorComponent } from './components/edit-colaborador/edit-colaborador.component';\nimport { DeleteUserComponent } from './components/delete-user/delete-user.component';\nimport { ChangeStateUserComponent } from './components/change-state-user/change-state-user.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule, NgbModalModule, NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CRUDTableModule } from 'src/app/_metronic/shared/crud-table';\n\n\n@NgModule({\n  declarations: [UsersComponent, UsersListComponent, AddUsersComponent, EditUsersComponent, EditColaboradorComponent, DeleteUserComponent, ChangeStateUserComponent],\n  imports: [\n    CommonModule,\n    UsersRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NgbModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    NgbModalModule,\n    NgbDatepickerModule,\n  ]\n})\nexport class UsersModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { UsersService } from '../../_services/users.service';\nimport { Toaster } from 'ngx-toast-notifications';\nimport { NoticyAlertComponent } from 'src/app/componets/notifications/noticy-alert/noticy-alert.component';\n\n@Component({\n  selector: 'app-edit-users',\n  templateUrl: './edit-users.component.html',\n  styleUrls: ['./edit-users.component.scss']\n})\nexport class EditUsersComponent implements OnInit {\n\n  @Input()user_selected:any=null;\n  @Output() usersE: EventEmitter<any> = new EventEmitter();\n\n  isLoading$;\n  isLoading = false;\n\n  formGroup: FormGroup;\n\n  constructor(\n    public fb:FormBuilder,\n    public _userService: UsersService,\n    public modal:NgbActiveModal,\n    public toaster: Toaster,\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this._userService.isLoading$;\n    this.loadForm();\n  }\n  loadForm(){\n    this.formGroup = this.fb.group({\n      name: [this.user_selected.name, Validators.compose([Validators.required, Validators.minLength(3)])],\n      surname: [this.user_selected.surname, Validators.compose([Validators.required, Validators.minLength(3)])],\n      email:[this.user_selected.email, Validators.compose([Validators.required, Validators.email, Validators.minLength(10), Validators.maxLength(250)])], \n      state: [this.user_selected.state],\n      role_id: [this.user_selected.role_id],\n      password: [null, Validators.compose([Validators.nullValidator, Validators.maxLength(250)])],\n      rpassword: [null, Validators.compose([Validators.nullValidator, Validators.maxLength(250)])],\n    });\n  }\n\n  save(){\n    if(this.formGroup.value.password && this.formGroup.value.rpassword ){\n      if(this.formGroup.value.password != this.formGroup.value.rpassword){\n      this.toaster.open(NoticyAlertComponent, {text:`danger-'Upps! Necesitas digitas las contraseñas iguales.'`} )\n      return;\n      }\n    }\n\n    this._userService.update(this.user_selected.id,this.formGroup.value).subscribe((resp:any) =>{\n      console.log(resp); \n      if(resp.message == 400){\n        this.toaster.open(NoticyAlertComponent, {text:`warning-'Upps! El Usuario Ya Existe.'`} )\n      return;\n      }else{\n        this.toaster.open(NoticyAlertComponent, {text:`primary-'Se Guardaros los Cambios del Usuario.'`} )\n        this.modal.close();\n        this.usersE.emit(resp.user);\n        return;\n      }\n    })\n  }\n  \n  isControlValid(controlName: string): boolean{\n    const control = this.formGroup.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n  isControlInvalid(controlName: string): boolean{\n    const control = this.formGroup.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n  controlHasError(validation: string, controlName: string){\n    const control = this.formGroup.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n  isControlTouched(controlName: string): boolean{\n    const control = this.formGroup.controls[controlName];\n    return control.dirty || control.touched;\n  }  \n\n\n}\n","<ng-container *ngIf=\"isLoading\">\n    <div class=\"progress progress-modal\">\n        <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\" style=\"width: 100%;\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>>\n    </div>\n</ng-container>\n\n<div class=\"modal-content\">\n    <div class=\"modal-header\">\n        <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\n            <i class=\"icon-2x text-dark-50 flaticon-user-add mx-2\"></i>Editar al Usuario {{ user_selected.name }}\n        </div>\n    </div>\n\n    <div class=\"overlay overlay-block cursor-default modal-body\" style=\"min-height: 404px\">\n        <ng-container *ngIf=\"isLoading$ | async\">\n            <div class=\"overlay-layer bg-transparent\">\n                <div class=\"spinner spinner-lg spinner-success\"></div>\n            </div>\n        </ng-container>\n\n        <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\n            <div class=\"form-group row\">\n                <div class=\"col-lg-6\">\n                    <label class=\"form-label\">Nombres Completos: *</label>\n                    <input type=\"text\" class=\"form-control form-control-solid form-control-lg\" name=\"name\" placeholder=\"Ingrese un nombre\" autocomplete=\"off\" [class.is-invalid]=\"isControlInvalid('name')\" [class.is-valid]=\"isControlValid('name')\"  formControlName=\"name\">\n\n                    <div class=\"valid-feedback\" *ngIf=\"isControlValid('name')\">\n                        El nombre se ingreso correctamente</div>\n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'name')\" >\n                        Se requiere el nombre completo</div>    \n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'name')\">\n                        El nombre debe tener al menos tres letas</div>\n                    <div class=\"invalid-feedback\"  *ngIf=\"controlHasError('maxlength', 'name')\">\n                        El nombre debe tener un maximo de 100 letras</div>\n                </div>\n                <div class=\"col-lg-6\">\n                    <label class=\"form-label\">Apellidos Completos: *</label>\n                    <input type=\"text\" class=\"form-control form-control-solid form-control-lg\" name=\"surname\" placeholder=\"Ingrese apellido\" autocomplete=\"off\" [class.is-invalid]=\"isControlInvalid('surname')\" [class.is-valid]=\"isControlValid('surname')\"  formControlName=\"surname\">\n\n                    <div class=\"valid-feedback\" *ngIf=\"isControlValid('surname')\">\n                        El apellido se ingreso correctamente</div>\n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'surname')\" >\n                        Se requiere el apellido completo</div>    \n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'surname')\">\n                        El apellido debe tener al menos tres letas</div>\n                    <div class=\"invalid-feedback\"  *ngIf=\"controlHasError('maxlength', 'surname')\">\n                        El apellido debe tener un maximo de 100 letras</div>\n                </div>\n            </div>\n            <div class=\"form-group row justify-content-center\">\n                <div class=\"col-lg-6\">\n                    <label class=\"form-label\">Correo Electronico: *</label>\n                    <input type=\"email\" class=\"form-control form-control-solid form-control-lg\" name=\"email\" placeholder=\"Ingrese correo\" autocomplete=\"off\" [class.is-invalid]=\"isControlInvalid('email')\" [class.is-valid]=\"isControlValid('email')\"  formControlName=\"email\">\n\n                    <div class=\"valid-feedback\" *ngIf=\"isControlValid('email')\">\n                        El Correo se ingreso correctamente</div>\n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'email')\" >\n                        Se requiere el Correo completo</div>    \n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'email')\">\n                        El Correo debe tener al menos tres letas</div>\n                    <div class=\"invalid-feedback\"  *ngIf=\"controlHasError('maxlength', 'email')\">\n                        El Correo debe tener un maximo de 100 letras</div>\n                </div>\n\n                <div class=\"col-lg-6\">\n                    <label class=\"form-label\">Selec. Rol: *</label>\n                    <select name=\"role_id\" class=\"form-control form-control-solid form-control-lg\" formControlName=\"role_id\">\n                        <option value=\"\" >Ninguno</option>\n                        <option value=\"1\" >ADMINISTRADOR GENERAL</option>\n                    </select>\n                </div>\n                \n            </div>\n            <div class=\"form-group row\">\n                <div class=\"col-lg-6\">\n                    <label class=\"form-label\">Contraseña: *</label>\n                    <input type=\"password\" class=\"form-control form-control-solid form-control-lg\" name=\"password\" placeholder=\"Ingrese contraseña\" autocomplete=\"off\" [class.is-invalid]=\"isControlInvalid('password')\" [class.is-valid]=\"isControlValid('password')\"  formControlName=\"password\">\n\n                    <div class=\"valid-feedback\" *ngIf=\"isControlValid('password')\">\n                        La contraseña se ingreso correctamente</div>\n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'password')\" >\n                        Se requiere la contraseña completo</div>    \n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'password')\">\n                        La contraseña debe tener al menos tres letas</div>\n                    <div class=\"invalid-feedback\"  *ngIf=\"controlHasError('maxlength', 'password')\">\n                        La contraseña debe tener un maximo de 100 letras</div>\n                </div>\n                <div class=\"col-lg-6\">\n                    <label class=\"form-label\">Repetir contraseña: *</label>\n                    <input type=\"password\" class=\"form-control form-control-solid form-control-lg\" name=\"rpassword\" placeholder=\"Repetir contraseña\" autocomplete=\"off\" [class.is-invalid]=\"isControlInvalid('rpassword')\" [class.is-valid]=\"isControlValid('rpassword')\"  formControlName=\"rpassword\">\n\n                    <div class=\"valid-feedback\" *ngIf=\"isControlValid('rpassword')\">\n                        La contraseña se ingreso correctamente</div>\n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'rpassword')\" >\n                        Se requiere la contraseña completo</div>    \n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'rpassword')\">\n                        La contraseña debe tener al menos tres letas</div>\n                    <div class=\"invalid-feedback\"  *ngIf=\"controlHasError('maxlength', 'rpassword')\">\n                        La contraseña debe tener un maximo de 100 letras</div>\n                </div>\n\n                <div class=\"col-lg-10\">\n                    <label class=\"form-label\">Selec. Estado: *</label>\n                    <select class=\"form-control form-control-solid form-control-lg\" name=\"status\" placeholder=\"Selec. el Estado\" formControlName=\"state\">\n                        <option value=\"1\">Activo</option>\n                        <option value=\"2\">Desactivo</option>\n                    </select>\n                </div>\n            </div>\n\n        </form>\n    </div>\n\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-light btn-elevate mr-2\" (click)=\"modal.dismiss()\">Cancel</button>\n        <button type=\"submit\" class=\"btn btn-primary btn-elevate mr-2\" (click)=\"save()\" [disabled]=\"formGroup.invalid\">Guardar Cambios</button>\n    </div>\n</div>\n\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-change-state-user',\n  templateUrl: './change-state-user.component.html',\n  styleUrls: ['./change-state-user.component.scss']\n})\nexport class ChangeStateUserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>change-state-user works!</p>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AuthService } from '../../auth';\nimport { URL_SERVICIOS } from 'src/app/config/config';\nimport { finalize } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  isLoading$: Observable<boolean>;\n  isLoadingSubject: BehaviorSubject<boolean>;\n  constructor(\n    private http: HttpClient,\n    private authservice: AuthService,\n  ){\n    this.isLoadingSubject = new BehaviorSubject<boolean>(false);\n    this.isLoading$ = this.isLoadingSubject.asObservable();\n  }\n\n  allUsers(page=1, state='', search=''){\n    this.isLoadingSubject.next(true);\n    let headers = new HttpHeaders({'Authorization' : 'Bearer' + this.authservice.token});\n    let LINK = \"\";\n    if(state){\n      LINK= LINK + \"&state=\"+state;\n    }\n    if(search){\n      LINK = LINK + \"&search=\"+search;\n    }\n    let URL = URL_SERVICIOS + \"/users/admin/all?page=\"+page+LINK;\n    return this.http.get(URL,{headers: headers}).pipe(\n      finalize(() => this.isLoadingSubject.next(false))\n    ); \n  }\n  register(data:any){\n    this.isLoadingSubject.next(true);\n    let headers = new HttpHeaders({'Authorization' : 'Bearer' + this.authservice.token});\n    let URL = URL_SERVICIOS + \"/users/admin/register\";\n    return this.http.post(URL,data,{headers: headers}).pipe(\n      finalize(() => this.isLoadingSubject.next(false))\n    ); \n  }\n\n  update(user_Id, data){\n    this.isLoadingSubject.next(true);\n    let headers = new HttpHeaders({'Authorization' : 'Bearer' + this.authservice.token});\n    let URL = URL_SERVICIOS + \"/users/admin/update/\"+user_Id;\n    return this.http.put(URL,data,{headers: headers}).pipe(\n    finalize(() => this.isLoadingSubject.next(false))\n  ); \n  }\n\n  deleteUser(user_Id){\n    this.isLoadingSubject.next(true);\n    let headers = new HttpHeaders({'Authorization' : 'Bearer' + this.authservice.token});\n    let URL = URL_SERVICIOS + \"/users/admin/delete/\"+user_Id;\n    return this.http.delete(URL,{headers: headers}).pipe(\n      finalize(() => this.isLoadingSubject.next(false))\n    );\n  }\n} \n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { UsersService } from '../../_services/users.service';\nimport { Toaster } from 'ngx-toast-notifications';\nimport { NoticyAlertComponent } from 'src/app/componets/notifications/noticy-alert/noticy-alert.component';\n\n@Component({\n  selector: 'app-add-users',\n  templateUrl: './add-users.component.html',\n  styleUrls: ['./add-users.component.scss']\n})\nexport class AddUsersComponent implements OnInit {\n\n  @Output() usersE: EventEmitter<any> = new EventEmitter();\n\n  isLoading$;\n  isLoading = false;\n\n  formGroup: FormGroup;\n\n  constructor(\n    public fb:FormBuilder,\n    public _userService: UsersService,\n    public modal:NgbActiveModal,\n    public toaster: Toaster,\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this._userService.isLoading$;\n    this.loadForm();\n  }\n  loadForm(){\n    this.formGroup = this.fb.group({\n      name: [null, Validators.compose([Validators.required, Validators.minLength(3)])],\n      surname: [null, Validators.compose([Validators.required, Validators.minLength(3)])],\n      email:[null, Validators.compose([Validators.required, Validators.email, Validators.minLength(10), Validators.maxLength(250)])], \n      type_user: [2],\n      role_id: ['1'],\n      state: '1',\n      password: [null, Validators.compose([Validators.required, Validators.maxLength(250)])],\n      rpassword: [null, Validators.compose([Validators.required, Validators.maxLength(250)])],\n    });\n  }\n\n  save(){\n    if(this.formGroup.value.password != this.formGroup.value.rpassword){\n      this.toaster.open(NoticyAlertComponent, {text:`danger-'Upps! Necesitas digitas las contraseñas iguales.'`} )\n      return;\n    }\n\n    this._userService.register(this.formGroup.value).subscribe((resp:any) =>{\n      console.log(resp);\n      if(resp.message == 400){\n        this.toaster.open(NoticyAlertComponent, {text:`warning-'Upps! El Usuario Ya Existe.'`} )\n      return;\n      }else{\n        this.toaster.open(NoticyAlertComponent, {text:`primary-'Upps! El Usuario Se Creo Satisfactoriamente.'`} )\n        this.modal.close();\n        this.usersE.emit(resp.user);\n        return;\n      }\n    })\n  }\n  \n  isControlValid(controlName: string): boolean{\n    const control = this.formGroup.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n  isControlInvalid(controlName: string): boolean{\n    const control = this.formGroup.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n  controlHasError(validation: string, controlName: string){\n    const control = this.formGroup.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n  isControlTouched(controlName: string): boolean{\n    const control = this.formGroup.controls[controlName];\n    return control.dirty || control.touched;\n  }  \n}\n","<ng-container *ngIf=\"isLoading\">\n    <div class=\"progress progress-modal\">\n        <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\" style=\"width: 100%;\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>>\n    </div>\n</ng-container>\n\n<div class=\"modal-content\">\n    <div class=\"modal-header\">\n        <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\n            <i class=\"icon-2x text-dark-50 flaticon-user-add mx-2\"></i>Crear Usuario\n        </div>\n    </div>\n\n    <div class=\"overlay overlay-block cursor-default modal-body\" style=\"min-height: 404px\">\n        <ng-container *ngIf=\"isLoading$ | async\">\n            <div class=\"overlay-layer bg-transparent\">\n                <div class=\"spinner spinner-lg spinner-success\"></div>\n            </div>\n        </ng-container>\n\n        <form action=\"#\" class=\"form form-label-right\" [formGroup]=\"formGroup\">\n            <div class=\"form-group row\">\n                <div class=\"col-lg-6\">\n                    <label class=\"form-label\">Nombres Completos: *</label>\n                    <input type=\"text\" class=\"form-control form-control-solid form-control-lg\" name=\"name\" placeholder=\"Ingrese un nombre\" autocomplete=\"off\" [class.is-invalid]=\"isControlInvalid('name')\" [class.is-valid]=\"isControlValid('name')\"  formControlName=\"name\">\n\n                    <div class=\"valid-feedback\" *ngIf=\"isControlValid('name')\">\n                        El nombre se ingreso correctamente</div>\n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'name')\" >\n                        Se requiere el nombre completo</div>    \n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'name')\">\n                        El nombre debe tener al menos tres letas</div>\n                    <div class=\"invalid-feedback\"  *ngIf=\"controlHasError('maxlength', 'name')\">\n                        El nombre debe tener un maximo de 100 letras</div>\n                </div>\n                <div class=\"col-lg-6\">\n                    <label class=\"form-label\">Apellidos Completos: *</label>\n                    <input type=\"text\" class=\"form-control form-control-solid form-control-lg\" name=\"surname\" placeholder=\"Ingrese apellido\" autocomplete=\"off\" [class.is-invalid]=\"isControlInvalid('surname')\" [class.is-valid]=\"isControlValid('surname')\"  formControlName=\"surname\">\n\n                    <div class=\"valid-feedback\" *ngIf=\"isControlValid('surname')\">\n                        El apellido se ingreso correctamente</div>\n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'surname')\" >\n                        Se requiere el apellido completo</div>    \n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'surname')\">\n                        El apellido debe tener al menos tres letas</div>\n                    <div class=\"invalid-feedback\"  *ngIf=\"controlHasError('maxlength', 'surname')\">\n                        El apellido debe tener un maximo de 100 letras</div>\n                </div>\n            </div>\n            <div class=\"form-group row justify-content-center\">\n                <div class=\"col-lg-6\">\n                    <label class=\"form-label\">Correo Electronico: *</label>\n                    <input type=\"email\" class=\"form-control form-control-solid form-control-lg\" name=\"email\" placeholder=\"Ingrese correo\" autocomplete=\"off\" [class.is-invalid]=\"isControlInvalid('email')\" [class.is-valid]=\"isControlValid('email')\"  formControlName=\"email\">\n\n                    <div class=\"valid-feedback\" *ngIf=\"isControlValid('email')\">\n                        El Correo se ingreso correctamente</div>\n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'email')\" >\n                        Se requiere el Correo completo</div>    \n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'email')\">\n                        El Correo debe tener al menos tres letas</div>\n                    <div class=\"invalid-feedback\"  *ngIf=\"controlHasError('maxlength', 'email')\">\n                        El Correo debe tener un maximo de 100 letras</div>\n                </div>\n\n                <div class=\"col-lg-6\">\n                    <label class=\"form-label\">CSelec. Rol: *</label>\n                    <select name=\"role_id\" class=\"form-control form-control-solid form-control-lg\" formControlName=\"role_id\">\n                        <option value=\"\" >Ninguno</option>\n                        <option value=\"1\" >ADMINISTRADOR GENERAL</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <div class=\"col-lg-6\">\n                    <label class=\"form-label\">Contraseña: *</label>\n                    <input type=\"password\" class=\"form-control form-control-solid form-control-lg\" name=\"password\" placeholder=\"Ingrese contraseña\" autocomplete=\"off\" [class.is-invalid]=\"isControlInvalid('password')\" [class.is-valid]=\"isControlValid('password')\"  formControlName=\"password\">\n\n                    <div class=\"valid-feedback\" *ngIf=\"isControlValid('password')\">\n                        La contraseña se ingreso correctamente</div>\n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'password')\" >\n                        Se requiere la contraseña completo</div>    \n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'password')\">\n                        La contraseña debe tener al menos tres letas</div>\n                    <div class=\"invalid-feedback\"  *ngIf=\"controlHasError('maxlength', 'password')\">\n                        La contraseña debe tener un maximo de 100 letras</div>\n                </div>\n                <div class=\"col-lg-6\">\n                    <label class=\"form-label\">Repetir contraseña: *</label>\n                    <input type=\"password\" class=\"form-control form-control-solid form-control-lg\" name=\"rpassword\" placeholder=\"Repetir contraseña\" autocomplete=\"off\" [class.is-invalid]=\"isControlInvalid('rpassword')\" [class.is-valid]=\"isControlValid('rpassword')\"  formControlName=\"rpassword\">\n\n                    <div class=\"valid-feedback\" *ngIf=\"isControlValid('rpassword')\">\n                        La contraseña se ingreso correctamente</div>\n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'rpassword')\" >\n                        Se requiere la contraseña completo</div>    \n                    <div class=\"invalid-feedback\" *ngIf=\"controlHasError('minlength', 'rpassword')\">\n                        La contraseña debe tener al menos tres letas</div>\n                    <div class=\"invalid-feedback\"  *ngIf=\"controlHasError('maxlength', 'rpassword')\">\n                        La contraseña debe tener un maximo de 100 letras</div>\n                </div>\n            </div>\n\n        </form>\n    </div>\n\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-light btn-elevate mr-2\" (click)=\"modal.dismiss()\">Cancel</button>\n        <button type=\"submit\" class=\"btn btn-primary btn-elevate mr-2\" (click)=\"save()\" [disabled]=\"formGroup.invalid\">Guardar</button>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsersListComponent } from './users-list/users-list.component';\nimport { UsersComponent } from './users.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersComponent,\n    children: [\n      {\n        path: 'list',\n        component: UsersListComponent,\n      },\n      // {\n      //   path: 'mi-perfil',\n      //   component: UsersProfileCComponent\n      // },\n      { path: '', redirectTo: 'list', pathMatch: 'full' },\n      { path: '**', redirectTo: 'list', pathMatch: 'full' },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsersRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { UsersService } from '../_services/users.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AddUsersComponent } from '../components/add-users/add-users.component';\nimport { EditUsersComponent } from '../components/edit-users/edit-users.component';\nimport { DeleteUserComponent } from '../components/delete-user/delete-user.component';\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.scss']\n})\nexport class UsersListComponent implements OnInit {\n\n  isLoading$;\n  isLoading = false;\n\n  totalPages= 1;\n  currentPage= 1;\n\n  state:any ='';\n  search:any ='';\n\n  users:any = [];\n \n  constructor(\n    public fb:FormBuilder,\n    public _userService: UsersService,\n    public modelService: NgbModal,\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this._userService.isLoading$;\n    this.allUsers();\n  }\n\n  allUsers(page=1){\n    this._userService.allUsers(page, this.state, this.search).subscribe((resp:any) => {\n      console.log(resp);\n      this.users = resp.users.data;\n      this.totalPages = resp.total;\n      this.currentPage = page;\n    });\n  }\n\n  reset(){\n    this.state = '';\n    this.search = '';\n    this.allUsers();\n  }\n\n  addUser(){\n    const modalRef = this.modelService.open(AddUsersComponent, {centered: true, size: 'md'});\n    modalRef.result.then(\n      () => {\n        \n      },\n      () => {\n        \n      }\n    )\n    modalRef.componentInstance.usersE.subscribe((resp:any) => {\n    console.log(resp);\n    resp.state = 1;\n    this.users.unshift(resp);\n    })\n  }\n\n  editUser(user){\n    const modalRef = this.modelService.open(EditUsersComponent, {centered: true, size: 'md'});\n    modalRef.componentInstance.user_selected = user;\n    modalRef.result.then(\n      () => {\n        \n      },\n      () => {\n        \n      }\n    )\n    modalRef.componentInstance.usersE.subscribe((resp:any) => {\n      console.log(resp);\n      let INDEX = this.users.findIndex(user => user.id == resp.id);\n      this.users[INDEX] = resp;\n    })\n  }\n  delete(user){\n    const modalRef = this.modelService.open(DeleteUserComponent, {centered: true, size: 'md'});\n    modalRef.componentInstance.user_selected = user;\n    modalRef.result.then(\n      () =>  {\n        \n      },\n      () => {\n        \n      })\n      modalRef.componentInstance.usersE.subscribe((resp:any) => {\n        console.log(resp);\n        let INDEX = this.users.findIndex(user => user.id == resp.id);\n        this.users.splice(INDEX,1);\n      })\n  }\n\n  loadPage(index){\n    this.allUsers(index);\n  }\n}\n","<div class=\"card card-custom gutter-b\">\n  <div class=\"card-header\">\n    <div class=\"card-title\">\n      <h3 class=\"card-label\"><i class=\"icon-2x text-dark-50 flaticon-users mx-2\"></i> Lista Usuarios</h3>\n    </div>\n    <div class=\"card-toolbar\">\n      <a type=\"button\" class=\"btn btn-primary\" (click)=\"addUser()\"><i class=\"icon-2x text-white flaticon-user-add\"></i> Nuevo Usuario</a> \n    </div>\n  </div>\n  <div class=\"card-body\">\n    <!-- begin: Filtration form -->\n    <div class=\"form form-label-right\">\n      <div class=\"form-group row\">\n        <div class=\"col-2\"> \n          <select class=\"form-control\" name=\"status\" placeholder=\"Filtrar por Estado\" [(ngModel)]=\"state\">\n            <option value=\"\">Todos</option>\n            <option value=\"1\">Activo</option>\n            <option value=\"2\">Desactivo</option>\n          </select><small class=\"form-text text-muted\"><b>Filtrar</b> por Estado</small>\n        </div>\n\n          <div class=\"col-3\">\n            <input type=\"text\"  class=\"form-control\" name=\"searchText\" placeholder=\"Buscar\" value=\"\" [(ngModel)]=\"search\"/>\n            <small class=\"form-text text-muted\"><b>Buscar</b>por nombres y apellidos</small>\n          </div>\n          <div class=\"col-3\">\n            <button class=\"btn btn-primary ml-2\" placement=\"top\" [ngbTooltip]=\"'Filtro'\" (click)=\"allUsers()\">\n              <i class=\"icon text-white flaticon-search-1\"></i>\n            </button>\n            <button class=\"btn btn-dark ml-2\" placement=\"top\" [ngbTooltip]=\"'Reset'\" (click)=\"reset()\">\n              <i class=\"icon text-white flaticon-refresh\"></i>\n            </button>\n          </div>\n      </div>\n    </div>\n\n      <ng-container *ngIf=\"isLoading$ | async\">\n        <span class=\"spinner spinner-primary ml-5\"></span>\n      </ng-container>\n\n      <div class=\"table-responsive\">\n        <table class=\"table table-head-custom table-vertical-center\" id=\"kt_advance_table_widget_1\">\n          <thead>\n            <tr class=\"text-left\">\n              <th class=\"pr-0\">Nombre</th>\n              <th class=\"pr-0\">Apellidos</th>\n              <th class=\"pr-0\">Correo</th>\n              <th >Status</th>\n              <th class=\"pr-0\" >Accion</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let user of users\">\n              <td>{{ user.name }}</td>\n              <td>{{ user.surname }}</td>\n              <td>{{ user.email }}</td>\n              <td>\n                <span class=\"label label-lg label-inline label-light-success\" *ngIf=\"user.state == 1\">Activo</span> \n                <span class=\"label label-lg label-inline label-light-danger\" *ngIf=\"user.state == 2\">Desactivado</span>\n              </td>\n              <td >\n                <a (click)=\"editUser(user)\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-1\" ngbTooltip=\"Editar Usuario\" ngbTooltipClass=\"kt-tooltip\">\n                  <span class=\"svg-icon svg-icon-md svg-icon-primary\">\n                      <!--begin::Svg Icon | path:assets/media/svg/icons/Communication/Write.svg-->\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                          <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                              <path d=\"M12.2674799,18.2323597 L12.0084872,5.45852451 C12.0004303,5.06114792 12.1504154,4.6768183 12.4255037,4.38993949 L15.0030167,1.70195304 L17.5910752,4.40093695 C17.8599071,4.6812911 18.0095067,5.05499603 18.0083938,5.44341307 L17.9718262,18.2062508 C17.9694575,19.0329966 17.2985816,19.701953 16.4718324,19.701953 L13.7671717,19.701953 C12.9505952,19.701953 12.2840328,19.0487684 12.2674799,18.2323597 Z\" fill=\"#000000\" fill-rule=\"nonzero\" transform=\"translate(14.701953, 10.701953) rotate(-135.000000) translate(-14.701953, -10.701953)\" />\n                              <path d=\"M12.9,2 C13.4522847,2 13.9,2.44771525 13.9,3 C13.9,3.55228475 13.4522847,4 12.9,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,13 C20,12.4477153 20.4477153,12 21,12 C21.5522847,12 22,12.4477153 22,13 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,6 C2,3.790861 3.790861,2 6,2 L12.9,2 Z\" fill=\"#000000\" fill-rule=\"nonzero\" opacity=\"0.3\" />\n                          </g>\n                      </svg>\n                      <!--end::Svg Icon-->\n                  </span>\n                </a>\n\n                <a (click)=\"delete(user)\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm\" ngbTooltip=\"Eliminar Usuario\" ngbTooltipClass=\"kt-tooltip\">\n                  <span class=\"svg-icon svg-icon-md svg-icon-danger\">\n                      <!--begin::Svg Icon | path:assets/media/svg/icons/General/Trash.svg-->\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                          <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                              <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                              <path d=\"M6,8 L6,20.5 C6,21.3284271 6.67157288,22 7.5,22 L16.5,22 C17.3284271,22 18,21.3284271 18,20.5 L18,8 L6,8 Z\" fill=\"#000000\" fill-rule=\"nonzero\" />\n                              <path d=\"M14,4.5 L14,4 C14,3.44771525 13.5522847,3 13,3 L11,3 C10.4477153,3 10,3.44771525 10,4 L10,4.5 L5.5,4.5 C5.22385763,4.5 5,4.72385763 5,5 L5,5.5 C5,5.77614237 5.22385763,6 5.5,6 L18.5,6 C18.7761424,6 19,5.77614237 19,5.5 L19,5 C19,4.72385763 18.7761424,4.5 18.5,4.5 L14,4.5 Z\" fill=\"#000000\" opacity=\"0.3\" />\n                          </g>\n                      </svg>\n                      <!--end::Svg Icon-->\n                  </span>\n                </a>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div>\n        <ngb-pagination [(collectionSize)]=\"totalPages\" [(page)]=\"currentPage\" [pageSize]=\"20\" [maxSize]=\"5\" [rotate]=\"true\" [boundaryLinks]=\"true\" (pageChange)=\"loadPage($event)\"></ngb-pagination>\n      </div>\n\n  </div>\n</div> "]}