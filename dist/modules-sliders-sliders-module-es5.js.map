{"version":3,"sources":["webpack:///src/app/modules/sliders/components/edit-sliders-new/edit-sliders-new.component.ts","webpack:///src/app/modules/sliders/components/edit-sliders-new/edit-sliders-new.component.html","webpack:///src/app/modules/sliders/components/delete-sliders-new/delete-sliders-new.component.ts","webpack:///src/app/modules/sliders/components/delete-sliders-new/delete-sliders-new.component.html","webpack:///src/app/modules/sliders/_services/sliders.service.ts","webpack:///src/app/modules/sliders/components/add-sliders-new/add-sliders-new.component.ts","webpack:///src/app/modules/sliders/components/add-sliders-new/add-sliders-new.component.html","webpack:///src/app/modules/sliders/sliders-lists/sliders-lists.component.ts","webpack:///src/app/modules/sliders/sliders-lists/sliders-lists.component.html","webpack:///src/app/modules/sliders/sliders.module.ts","webpack:///src/app/modules/sliders/sliders-routing.module.ts","webpack:///src/app/modules/sliders/sliders.component.ts","webpack:///src/app/modules/sliders/sliders.component.html"],"names":["EditSlidersNewComponent","_slidersService","modal","toaster","sliderE","isLoading","name","url","imagen_file","imagen_previzualiza","isLoading$","slider_selected","imagen","$event","target","files","type","indexOf","open","text","reader","FileReader","readAsDataURL","onloadend","result","formData","FormData","append","updateSlider","id","subscribe","resp","console","log","emit","slider","close","processFile","save","selector","templateUrl","styleUrls","DeleteSlidersNewComponent","deleteSlider","SlidersService","http","authservice","isLoadingSubject","asObservable","next","headers","token","URL","get","pipe","data","post","slider_id","providedIn","AddSlidersNewComponent","createSliders","SlidersListsComponent","modelService","search","sliders","URL_BACKEND","allSliders","modalRef","centered","size","then","componentInstance","unshift","INDEX","findIndex","item","splice","addSlider","SlidersModule","declarations","imports","routes","path","component","children","redirectTo","pathMatch","SlidersRoutingModule","forChild","exports","SlidersComponent"],"mappings":"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","file":"modules-sliders-sliders-module-es5.js","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Toaster } from 'ngx-toast-notifications';\nimport { NoticyAlertComponent } from 'src/app/componets/notifications/noticy-alert/noticy-alert.component';\nimport { URL_BACKEND } from 'src/app/config/config';\nimport { SlidersService } from '../../_services/sliders.service';\n\n@Component({\n  selector: 'app-edit-sliders-new',\n  templateUrl: './edit-sliders-new.component.html',\n  styleUrls: ['./edit-sliders-new.component.scss']\n})\nexport class EditSlidersNewComponent implements OnInit {\n\n  @Input() slider_selected:any;\n  @Output() sliderE: EventEmitter<any> = new EventEmitter();\n  isLoading$:any;\n  isLoading:boolean = false;\n\n  name:any = null;\n  url:any = null;\n  imagen_file:any = null;\n  imagen_previzualiza:any = null;\n  constructor(\n    public _slidersService: SlidersService,\n    public modal: NgbActiveModal,\n    public toaster: Toaster,\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this._slidersService.isLoading$;\n    this.name = this.slider_selected.name;\n    this.url = this.slider_selected.url;\n    this.imagen_previzualiza = URL_BACKEND+'storage/'+this.slider_selected.imagen;\n  }\n\n  processFile($event){\n    if($event.target.files[0].type.indexOf(\"image\") < 0){\n      this.toaster.open(NoticyAlertComponent,{text:`danger-'EL ARCHIVO CARGADO NO ES UNA IMAGEN'`});\n      return;\n    }\n    this.imagen_file = $event.target.files[0];\n    let reader = new FileReader();\n    reader.readAsDataURL(this.imagen_file);\n    reader.onloadend = () => this.imagen_previzualiza = reader.result;\n    // setTimeout(() => {\n    //   console.log(this.imagen_previzualiza);\n    // }, 25);\n  }\n\n  save(){\n    let formData = new FormData();\n    formData.append(\"imagen_file\",this.imagen_file);\n    if(this.name){\n      formData.append(\"name\",this.name);\n    }\n    if(this.url){\n      formData.append(\"url\",this.url);\n    }\n    this._slidersService.updateSlider(this.slider_selected.id,formData).subscribe((resp:any) => {\n      console.log(resp);\n      this.toaster.open(NoticyAlertComponent,{text:`primary-'LA SLIDER SE  A EDITADO DE MANERA CORRECTA.'`});\n      this.sliderE.emit(resp.slider);\n      this.modal.close();\n    })\n  }\n\n\n}\n","<ng-container *ngIf=\"isLoading\">\n    <div class=\"progress progress-modal\">\n      <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n        style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n    </div>\n  </ng-container>\n  <div class=\"modal-content\">\n    <div class=\"modal-header\">\n      <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\n        <i class=\"icon-2x text-dark-50 flaticon-interface-9 mx-2\"></i> Editar Slider: '{{ slider_selected.name }}'\n      </div>\n    </div>\n    <div\n      class=\"overlay overlay-block cursor-default modal-body\"\n    >\n      <ng-container *ngIf=\"isLoading$ | async\">\n        <div class=\"overlay-layer bg-transparent\">\n          <div class=\"spinner spinner-lg spinner-success\"></div>\n        </div>\n      </ng-container>\n\n      <form action=\"#\" class=\"form form-label-right\">\n        <div class=\"form-group row\">\n            <div class=\"col-12\">\n                <label class=\"form-label\">Nombre de Boton: *</label>\n                <input type=\"text\"\n                    class=\"form-control form-control-solid form-control-lg\"\n                    name=\"name\"\n                    placeholder=\"Nombre\"\n                    autocomplete=\"off\"\n                    [(ngModel)]=\"name\"\n                >\n            </div>\n            <div class=\"col-12 py-2\">\n                <label class=\"form-label\">Sube tu imagen: *</label>\n                <div class=\"custom-file\">\n                    <input type=\"file\" class=\"custom-file-input\" id=\"customFile\"  accept=\".jpeg, .bmp, .jpg, .png, .gif, .webp\"  (change)=\"processFile($event)\">\n                    <label class=\"custom-file-label\" for=\"customFile\">Choose file</label>\n                </div>\n            </div>\n            <div class=\"col-12 py-2\" *ngIf=\"imagen_previzualiza\">\n                <img [src]=\"imagen_previzualiza\" class=\"w-100\" alt=\"\">\n            </div>\n            <div class=\"col-12 py-2\">\n                <label class=\"form-label\">Url del boton: *</label>\n                <input type=\"text\"\n                    class=\"form-control form-control-solid form-control-lg\"\n                    name=\"url\"\n                    placeholder=\"url\"\n                    autocomplete=\"off\"\n                    [(ngModel)]=\"url\"\n                >\n            </div>\n        </div>\n      </form>\n\n   </div>\n    <div class=\"modal-footer\">\n      <button\n        type=\"button\"\n        class=\"btn btn-light btn-elevate mr-2\"\n        (click)=\"modal.dismiss()\"\n      >\n        Cerrar\n      </button>\n      <button\n        type=\"submit\"\n        class=\"btn btn-primary btn-elevate mr-2\"\n        (click)=\"save()\"\n      >\n        Guardar \n      </button>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { SlidersService } from '../../_services/sliders.service';\n\n@Component({\n  selector: 'app-delete-sliders-new',\n  templateUrl: './delete-sliders-new.component.html',\n  styleUrls: ['./delete-sliders-new.component.scss']\n})\nexport class DeleteSlidersNewComponent implements OnInit {\n\n  @Input() slider_selected:any = null;\n  @Output() sliderE: EventEmitter<any> = new EventEmitter();\n  \n  isLoading$;\n  isLoading = false;\n\n  constructor(\n    public _slidersService: SlidersService,\n    public modal: NgbActiveModal,\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this._slidersService.isLoading$;\n  }\n\n  delete(){\n    this._slidersService.deleteSlider(this.slider_selected.id).subscribe((resp:any) => {\n      console.log(resp);\n      this.modal.close();\n      this.sliderE.emit(this.slider_selected);\n    })\n  }\n\n}\n","<ng-container *ngIf=\"isLoading\">\n    <div class=\"progress progress-modal\">\n      <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n        style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n    </div>\n  </ng-container>\n  <div class=\"modal-content\">\n    <div class=\"modal-header\">\n      <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\n        <i class=\"icon-2x text-dark-50 \n        fas fa-user-times mx-2\"></i> Eliminar SLIDER : {{ slider_selected.name }}\n      </div>\n    </div>\n    <div\n      class=\"overlay overlay-block cursor-default modal-body\"\n    >\n      <ng-container *ngIf=\"isLoading$ | async\">\n        <div class=\"overlay-layer bg-transparent\">\n          <div class=\"spinner spinner-lg spinner-success\"></div>\n        </div>\n      </ng-container>\n\n      <span>¿ESTAS SEGURO DE ELIMINAR ESTA SLIDER ?: <b>{{ slider_selected.name }}</b></span>\n\n    </div>\n    <div class=\"modal-footer\">\n      <button\n        type=\"button\"\n        class=\"btn btn-light btn-elevate mr-2\"\n        (click)=\"modal.dismiss()\"\n      >\n        Cancel\n      </button>\n      <button\n        type=\"submit\"\n        class=\"btn btn-danger btn-elevate mr-2\"\n        (click)=\"delete()\"\n      >\n        ELIMINAR\n      </button>\n    </div>\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { URL_SERVICIOS } from 'src/app/config/config';\nimport { AuthService } from '../../auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SlidersService {\n\n  isLoading$: Observable<boolean>;\n  isLoadingSubject: BehaviorSubject<boolean>;\n  \n  constructor(\n    private http: HttpClient,\n    public authservice: AuthService,\n  ) {\n    this.isLoadingSubject = new BehaviorSubject<boolean>(false);\n    this.isLoading$ = this.isLoadingSubject.asObservable();\n  }\n  \n  allSliders() {\n    this.isLoadingSubject.next(true);\n    let headers = new HttpHeaders({'Authorization' : 'Bearer '+this.authservice.token});\n    let URL = URL_SERVICIOS + \"/sliders/all\";\n    return this.http.get(URL,{headers: headers}).pipe(\n      finalize(() => this.isLoadingSubject.next(false))\n    );\n  }\n\n  createSliders(data:any){\n    this.isLoadingSubject.next(true);\n    let headers = new HttpHeaders({'Authorization' : 'Bearer '+this.authservice.token});\n    let URL = URL_SERVICIOS + \"/sliders/add\";\n    return this.http.post(URL,data,{headers: headers}).pipe(\n      finalize(() => this.isLoadingSubject.next(false))\n    );\n  }\n\n  updateSlider(slider_id:any,data:any){\n    this.isLoadingSubject.next(true);\n    let headers = new HttpHeaders({'Authorization' : 'Bearer '+this.authservice.token});\n    let URL = URL_SERVICIOS + \"/sliders/update/\"+slider_id;\n    return this.http.post(URL,data,{headers: headers}).pipe(\n      finalize(() => this.isLoadingSubject.next(false))\n    );\n  }\n\n  deleteSlider(slider_id){\n    this.isLoadingSubject.next(true);\n    let headers = new HttpHeaders({'Authorization' : 'Bearer '+this.authservice.token});\n    let URL = URL_SERVICIOS + \"/sliders/delete/\"+slider_id;\n    return this.http.delete(URL,{headers: headers}).pipe(\n      finalize(() => this.isLoadingSubject.next(false))\n    );\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Toaster } from 'ngx-toast-notifications';\nimport { NoticyAlertComponent } from 'src/app/componets/notifications/noticy-alert/noticy-alert.component';\nimport { SlidersService } from '../../_services/sliders.service';\n\n@Component({\n  selector: 'app-add-sliders-new',\n  templateUrl: './add-sliders-new.component.html',\n  styleUrls: ['./add-sliders-new.component.scss']\n})\nexport class AddSlidersNewComponent implements OnInit {\n\n  @Output() sliderE: EventEmitter<any> = new EventEmitter();\n  isLoading$:any;\n  isLoading:boolean = false;\n\n  name:any = null;\n  url:any = null;\n  imagen_file:any = null;\n  imagen_previzualiza:any = null;\n  constructor(\n    public _slidersService: SlidersService,\n    public modal: NgbActiveModal,\n    public toaster: Toaster,\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this._slidersService.isLoading$;\n  }\n\n  processFile($event){\n    if($event.target.files[0].type.indexOf(\"image\") < 0){\n      this.toaster.open(NoticyAlertComponent,{text:`danger-'EL ARCHIVO CARGADO NO ES UNA IMAGEN'`});\n      return;\n    }\n    this.imagen_file = $event.target.files[0];\n    let reader = new FileReader();\n    reader.readAsDataURL(this.imagen_file);\n    reader.onloadend = () => this.imagen_previzualiza = reader.result;\n    // setTimeout(() => {\n    //   console.log(this.imagen_previzualiza);\n    // }, 25);\n  }\n\n  save(){\n    let formData = new FormData();\n    formData.append(\"imagen_file\",this.imagen_file);\n    if(this.name){\n      formData.append(\"name\",this.name);\n    }\n    if(this.url){\n      formData.append(\"url\",this.url);\n    }\n    this._slidersService.createSliders(formData).subscribe((resp:any) => {\n      console.log(resp);\n      this.sliderE.emit(resp.slider);\n      this.toaster.open(NoticyAlertComponent,{text:`primary-'LA SLIDER SE A REGISTRADO DE MANERA CORRECTA.'`});\n      this.modal.close();\n    })\n  }\n\n}\n","<ng-container *ngIf=\"isLoading\">\n    <div class=\"progress progress-modal\">\n      <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n        style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n    </div>\n  </ng-container>\n  <div class=\"modal-content\">\n    <div class=\"modal-header\">\n      <div class=\"modal-title h4\" id=\"example-modal-sizes-title-lg\">\n        <i class=\"icon-2x text-dark-50 flaticon-interface-9 mx-2\"></i> Crear Slider\n      </div>\n    </div>\n    <div\n      class=\"overlay overlay-block cursor-default modal-body\"\n    >\n      <ng-container *ngIf=\"isLoading$ | async\">\n        <div class=\"overlay-layer bg-transparent\">\n          <div class=\"spinner spinner-lg spinner-success\"></div>\n        </div>\n      </ng-container>\n\n      <form action=\"#\" class=\"form form-label-right\">\n        <div class=\"form-group row\">\n            <div class=\"col-12\">\n                <label class=\"form-label\">Nombre de boton: *</label>\n                <input type=\"text\"\n                    class=\"form-control form-control-solid form-control-lg\"\n                    name=\"name\"\n                    placeholder=\"Nombre\"\n                    autocomplete=\"off\"\n                    [(ngModel)]=\"name\"\n                >\n            </div>\n            <div class=\"col-12 py-2\">\n                <label class=\"form-label\">Sube tu imagen: *</label>\n                <div class=\"custom-file\">\n                    <input type=\"file\" class=\"custom-file-input\" id=\"customFile\"  accept=\".jpeg, .bmp, .jpg, .png, .gif, .webp\"  (change)=\"processFile($event)\">\n                    <label class=\"custom-file-label\" for=\"customFile\">Choose file</label>\n                </div>\n            </div>\n            <div class=\"col-12 py-2\" *ngIf=\"imagen_previzualiza\">\n                <img [src]=\"imagen_previzualiza\" class=\"w-100\" alt=\"\">\n            </div>\n            <div class=\"col-12 py-2\">\n                <label class=\"form-label\">Url del boton: *</label>\n                <input type=\"text\"\n                    class=\"form-control form-control-solid form-control-lg\"\n                    name=\"name\"\n                    placeholder=\"url\"\n                    autocomplete=\"off\"\n                    [(ngModel)]=\"url\"\n                >\n            </div>\n        </div>\n      </form>\n\n   </div>\n    <div class=\"modal-footer\">\n      <button\n        type=\"button\"\n        class=\"btn btn-light btn-elevate mr-2\"\n        (click)=\"modal.dismiss()\"\n      >\n        Cerrar\n      </button>\n      <button\n        type=\"submit\"\n        class=\"btn btn-primary btn-elevate mr-2\"\n        (click)=\"save()\"\n      >\n        Guardar \n      </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { URL_BACKEND } from 'src/app/config/config';\nimport { AddSlidersNewComponent } from '../components/add-sliders-new/add-sliders-new.component';\nimport { DeleteSlidersNewComponent } from '../components/delete-sliders-new/delete-sliders-new.component';\nimport { EditSlidersNewComponent } from '../components/edit-sliders-new/edit-sliders-new.component';\nimport { SlidersService } from '../_services/sliders.service';\n\n@Component({\n  selector: 'app-sliders-lists',\n  templateUrl: './sliders-lists.component.html',\n  styleUrls: ['./sliders-lists.component.scss']\n})\nexport class SlidersListsComponent implements OnInit {\n\n  isLoading$;\n  search:any = null;\n  \n  sliders:any = [];\n  URL_BACKEND:any = URL_BACKEND;\n\n  constructor(\n    public _slidersService: SlidersService,\n    public modelService: NgbModal,\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this._slidersService.isLoading$;\n    this.allSliders();\n  }\n  allSliders(){\n    this._slidersService.allSliders().subscribe((resp:any)=>{\n      console.log(resp);\n      this.sliders = resp.sliders;\n    })\n  }\n\n  addSlider(){\n    const modalRef = this.modelService.open(AddSlidersNewComponent, {centered : true, size: 'sm'});\n    modalRef.result.then(\n      () => {\n\n      },\n      () => {\n        \n      }\n    )\n    modalRef.componentInstance.sliderE.subscribe((resp:any)=>{\n      // console.log(resp);\n      this.sliders.unshift(resp);\n    });\n  }\n\n  edit(slider){\n    const modalRef = this.modelService.open(EditSlidersNewComponent, {centered : true, size: 'sm'});\n    modalRef.componentInstance.slider_selected = slider;\n    modalRef.result.then(\n      () => {\n\n      },\n      () => {\n        \n      }\n    )\n    modalRef.componentInstance.sliderE.subscribe((resp:any) => {\n      let INDEX = this.sliders.findIndex(item => item.id == resp.id);\n      this.sliders[INDEX] = resp;\n    })\n  }\n  delete(slider){\n    const modalRef = this.modelService.open(DeleteSlidersNewComponent, {centered : true, size: 'sm'});\n    modalRef.componentInstance.slider_selected = slider;\n    modalRef.result.then(\n      () => {\n\n      },\n      () => {\n        \n      }\n    )\n    modalRef.componentInstance.sliderE.subscribe((resp:any) => {\n      let INDEX = this.sliders.findIndex(item => item.id == resp.id);\n      this.sliders.splice(INDEX,1);\n    })\n  }\n\n}\n","<div class=\"card card-custom gutter-b\">\n    <div class=\"card-header\">\n      <div class=\"card-title\">\n        <h3 class=\"card-label\"><i class=\"icon-2x text-dark-50 flaticon2-image-file mx-2\"></i> Lista de sliders</h3>\n      </div>\n      <div class=\"card-toolbar\">\n        <a\n          type=\"button\"\n          class=\"btn btn-primary\"\n          (click)=\"addSlider()\"\n          ><i class=\"icon-2x text-white flaticon-file-1\"></i> Nuevo Slider</a\n        >\n      </div>\n    </div>\n    <div class=\"card-body\">\n        \n        <ng-container *ngIf=\"isLoading$ | async\">\n            <span class=\"spinner spinner-primary ml-5\"></span>\n        </ng-container>\n\n        <div class=\"table-responsive\">\n          <table class=\"table table-head-custom table-vertical-center\" id=\"kt_advance_table_widget_1\">\n              <thead>\n                  <tr class=\"text-left\">\n                      <th class=\"pr-0\">Imagen</th>\n                      <th >Nombre Boton</th>\n                      <th class=\"pr-0\">Acción</th>\n                  </tr>\n              </thead>\n              <tbody>\n                  <tr *ngFor=\"let slider of sliders\">\n                    <td>\n                      <div class=\"symbol symbol-50 flex-shrink-0 mr-4\">\n                        <div class=\"symbol-label\" [ngStyle]=\"{'background-image': 'url('+URL_BACKEND+'storage/'+slider.imagen+')'}\"></div>\n                      </div>\n                    </td>\n                    <td>{{ slider.name }}</td>\n                    <td>\n                      <a (click)=\"edit(slider)\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-1\" ngbTooltip=\"Editar Slider\" ngbTooltipClass=\"kt-tooltip\">\n                        <span class=\"svg-icon svg-icon-md svg-icon-primary\">\n                            <!--begin::Svg Icon | path:assets/media/svg/icons/Communication/Write.svg-->\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                                    <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                    <path d=\"M12.2674799,18.2323597 L12.0084872,5.45852451 C12.0004303,5.06114792 12.1504154,4.6768183 12.4255037,4.38993949 L15.0030167,1.70195304 L17.5910752,4.40093695 C17.8599071,4.6812911 18.0095067,5.05499603 18.0083938,5.44341307 L17.9718262,18.2062508 C17.9694575,19.0329966 17.2985816,19.701953 16.4718324,19.701953 L13.7671717,19.701953 C12.9505952,19.701953 12.2840328,19.0487684 12.2674799,18.2323597 Z\" fill=\"#000000\" fill-rule=\"nonzero\" transform=\"translate(14.701953, 10.701953) rotate(-135.000000) translate(-14.701953, -10.701953)\" />\n                                    <path d=\"M12.9,2 C13.4522847,2 13.9,2.44771525 13.9,3 C13.9,3.55228475 13.4522847,4 12.9,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,13 C20,12.4477153 20.4477153,12 21,12 C21.5522847,12 22,12.4477153 22,13 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,6 C2,3.790861 3.790861,2 6,2 L12.9,2 Z\" fill=\"#000000\" fill-rule=\"nonzero\" opacity=\"0.3\" />\n                                </g>\n                            </svg>\n                            <!--end::Svg Icon-->\n                        </span>\n                      </a>\n    \n                      <a (click)=\"delete(slider)\" class=\"btn btn-icon btn-light btn-hover-primary btn-sm\" ngbTooltip=\"Eliminar Sliders\" ngbTooltipClass=\"kt-tooltip\">\n                        <span class=\"svg-icon svg-icon-md svg-icon-danger\">\n                            <!--begin::Svg Icon | path:assets/media/svg/icons/General/Trash.svg-->\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                                    <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                    <path d=\"M6,8 L6,20.5 C6,21.3284271 6.67157288,22 7.5,22 L16.5,22 C17.3284271,22 18,21.3284271 18,20.5 L18,8 L6,8 Z\" fill=\"#000000\" fill-rule=\"nonzero\" />\n                                    <path d=\"M14,4.5 L14,4 C14,3.44771525 13.5522847,3 13,3 L11,3 C10.4477153,3 10,3.44771525 10,4 L10,4.5 L5.5,4.5 C5.22385763,4.5 5,4.72385763 5,5 L5,5.5 C5,5.77614237 5.22385763,6 5.5,6 L18.5,6 C18.7761424,6 19,5.77614237 19,5.5 L19,5 C19,4.72385763 18.7761424,4.5 18.5,4.5 L14,4.5 Z\" fill=\"#000000\" opacity=\"0.3\" />\n                                </g>\n                            </svg>\n                            <!--end::Svg Icon-->\n                        </span>\n                      </a>\n\n                    </td>\n                  </tr>\n              </tbody>\n          </table>\n        </div>\n\n     </div>\n  </div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SlidersRoutingModule } from './sliders-routing.module';\nimport { SlidersComponent } from './sliders.component';\nimport { SlidersListsComponent } from './sliders-lists/sliders-lists.component';\nimport { AddSlidersNewComponent } from './components/add-sliders-new/add-sliders-new.component';\nimport { EditSlidersNewComponent } from './components/edit-sliders-new/edit-sliders-new.component';\nimport { DeleteSlidersNewComponent } from './components/delete-sliders-new/delete-sliders-new.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule, NgbModalModule, NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CRUDTableModule } from 'src/app/_metronic/shared/crud-table';\n\n\n@NgModule({\n  declarations: [SlidersComponent, SlidersListsComponent, AddSlidersNewComponent, EditSlidersNewComponent, DeleteSlidersNewComponent],\n  imports: [\n    CommonModule,\n    SlidersRoutingModule,\n\n    HttpClientModule,\n    FormsModule,\n    NgbModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    NgbModalModule,\n    NgbDatepickerModule,\n  ]\n})\nexport class SlidersModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SlidersListsComponent } from './sliders-lists/sliders-lists.component';\nimport { SlidersComponent } from './sliders.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SlidersComponent,\n    children: [\n      {\n        path: 'lista',\n        component: SlidersListsComponent,\n      },\n      {\n        path: '',redirectTo: 'lista', pathMatch: 'full',\n      },\n      {\n        path: '**',redirectTo: 'lista', pathMatch: 'full',\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SlidersRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sliders',\n  templateUrl: './sliders.component.html',\n  styleUrls: ['./sliders.component.scss']\n})\nexport class SlidersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>"]}