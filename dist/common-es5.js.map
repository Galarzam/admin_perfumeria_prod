{"version":3,"sources":["webpack:///src/app/modules/auth/_models/auth.model.ts","webpack:///src/app/modules/auth/registration/confirm-password.validator.ts","webpack:///src/app/modules/auth/_models/user.model.ts","webpack:///src/app/modules/i18n/translation.module.ts"],"names":["AuthModel","auth","accessToken","refreshToken","expiresIn","ConfirmPasswordValidator","control","password","get","value","confirmPassword","setErrors","ConfirmPassword","UserModel","user","id","username","fullname","email","pic","roles","occupation","companyName","phone","address","socialNetworks","TranslationModule","imports","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAAaA,S;;;;;;;iBAKX,iBAAQC,IAAR,EAAmB;AACjB,iBAAKC,WAAL,GAAmBD,IAAI,CAACC,WAAxB;AACA,iBAAKC,YAAL,GAAoBF,IAAI,CAACE,YAAzB;AACA,iBAAKC,SAAL,GAAiBH,IAAI,CAACG,SAAtB;AACD;;;;;;;;;;;;;;;;;;;;;ACPH;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,wB;;;;;;;;AACX;;;;AAIA,iCAAqBC,OAArB,EAA+C;AAC7C,gBAAMC,QAAQ,GAAGD,OAAO,CAACE,GAAR,CAAY,UAAZ,EAAwBC,KAAzC;AAEA,gBAAMC,eAAe,GAAGJ,OAAO,CAACE,GAAR,CAAY,WAAZ,EAAyBC,KAAjD;;AAEA,gBAAIF,QAAQ,KAAKG,eAAjB,EAAkC;AAChCJ,qBAAO,CAACE,GAAR,CAAY,WAAZ,EAAyBG,SAAzB,CAAmC;AAAEC,+BAAe,EAAE;AAAnB,eAAnC;AACD,aAFD,MAEO;AACL,qBAAO,IAAP;AACD;AACF;;;;;;;;;;;;;;;;;;;;;ACjBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAIaC,S;;;;;;;;;;;;;iBA8CX,iBAAQC,IAAR,EAAmB;AACjB,iBAAKC,EAAL,GAAUD,IAAI,CAACC,EAAf;AACA,iBAAKC,QAAL,GAAgBF,IAAI,CAACE,QAAL,IAAiB,EAAjC;AACA,iBAAKT,QAAL,GAAgBO,IAAI,CAACP,QAAL,IAAiB,EAAjC;AACA,iBAAKU,QAAL,GAAgBH,IAAI,CAACG,QAAL,IAAiB,EAAjC;AACA,iBAAKC,KAAL,GAAaJ,IAAI,CAACI,KAAL,IAAc,EAA3B;AACA,iBAAKC,GAAL,GAAWL,IAAI,CAACK,GAAL,IAAY,kCAAvB;AACA,iBAAKC,KAAL,GAAaN,IAAI,CAACM,KAAL,IAAc,EAA3B;AACA,iBAAKC,UAAL,GAAkBP,IAAI,CAACO,UAAL,IAAmB,EAArC;AACA,iBAAKC,WAAL,GAAmBR,IAAI,CAACQ,WAAL,IAAoB,EAAvC;AACA,iBAAKC,KAAL,GAAaT,IAAI,CAACS,KAAL,IAAc,EAA3B;AACA,iBAAKC,OAAL,GAAeV,IAAI,CAACU,OAApB;AACA,iBAAKC,cAAL,GAAsBX,IAAI,CAACW,cAA3B;AACD;;;;QA3D4B,qD;;;;;;;;;;;;;;;;;ACJ/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaC,iB;;;;;cAAAA;;;;2BAAAA,iB;AAAiB,S;AAAA,kBAHnB,CAAC,4DAAD,EAAe,mEAAf,CAGmB,EAFlB,4DAEkB,EAFJ,mEAEI;;;;4HAAjBA,iB,EAAiB;AAAA,oBAHlB,4DAGkB,EAHJ,mEAGI;AAHW,oBAC7B,4DAD6B,EACf,mEADe;AAGX,S;AAFW,O;;;;;wEAE5BA,iB,EAAiB;gBAJ7B,sDAI6B;iBAJpB;AACRC,mBAAO,EAAE,CAAC,4DAAD,EAAe,mEAAf,CADD;AAERC,mBAAO,EAAE,CAAC,4DAAD,EAAe,mEAAf;AAFD,W;AAIoB,U","file":"common-es5.js","sourcesContent":["export class AuthModel {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  expiresIn: Date;\r\n\r\n  setAuth(auth: any) {\r\n    this.accessToken = auth.accessToken;\r\n    this.refreshToken = auth.refreshToken;\r\n    this.expiresIn = auth.expiresIn;\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport class ConfirmPasswordValidator {\r\n  /**\r\n   * Check matching password with confirm password\r\n   * @param control AbstractControl\r\n   */\r\n  static MatchPassword(control: AbstractControl) {\r\n    const password = control.get('password').value;\r\n\r\n    const confirmPassword = control.get('cPassword').value;\r\n\r\n    if (password !== confirmPassword) {\r\n      control.get('cPassword').setErrors({ ConfirmPassword: true });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { AuthModel } from './auth.model';\r\nimport { AddressModel } from './address.model';\r\nimport { SocialNetworksModel } from './social-networks.model';\r\n\r\nexport class UserModel extends AuthModel {\r\n  id: number;\r\n  username: string;\r\n  password: string;\r\n  fullname: string;\r\n  email: string;\r\n  pic: string;\r\n  roles: number[];\r\n  occupation: string;\r\n  companyName: string;\r\n  phone: string;\r\n  address?: AddressModel;\r\n  socialNetworks?: SocialNetworksModel;\r\n  // personal information\r\n  firstname: string;\r\n  lastname: string;\r\n  website: string;\r\n  // account information\r\n  language: string;\r\n  timeZone: string;\r\n  communication: {\r\n    email: boolean,\r\n    sms: boolean,\r\n    phone: boolean\r\n  };\r\n  // email settings\r\n  emailSettings: {\r\n    emailNotification: boolean,\r\n    sendCopyToPersonalEmail: boolean,\r\n    activityRelatesEmail: {\r\n      youHaveNewNotifications: boolean,\r\n      youAreSentADirectMessage: boolean,\r\n      someoneAddsYouAsAsAConnection: boolean,\r\n      uponNewOrder: boolean,\r\n      newMembershipApproval: boolean,\r\n      memberRegistration: boolean\r\n    },\r\n    updatesFromKeenthemes: {\r\n      newsAboutKeenthemesProductsAndFeatureUpdates: boolean,\r\n      tipsOnGettingMoreOutOfKeen: boolean,\r\n      thingsYouMissedSindeYouLastLoggedIntoKeen: boolean,\r\n      newsAboutMetronicOnPartnerProductsAndOtherServices: boolean,\r\n      tipsOnMetronicBusinessProducts: boolean\r\n    }\r\n  };\r\n\r\n  setUser(user: any) {\r\n    this.id = user.id;\r\n    this.username = user.username || '';\r\n    this.password = user.password || '';\r\n    this.fullname = user.fullname || '';\r\n    this.email = user.email || '';\r\n    this.pic = user.pic || './assets/media/users/default.jpg';\r\n    this.roles = user.roles || [];\r\n    this.occupation = user.occupation || '';\r\n    this.companyName = user.companyName || '';\r\n    this.phone = user.phone || '';\r\n    this.address = user.address;\r\n    this.socialNetworks = user.socialNetworks;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, TranslateModule],\r\n  exports: [CommonModule, TranslateModule],\r\n})\r\nexport class TranslationModule {}\r\n"]}